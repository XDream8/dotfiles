#!/bin/bash

term=st
graphical=0
editor=nvim

declare options=(">>h What You Want To Edit
alacritty
awesome
bash
broot
bspwm
doom.d/config.el
doom.d/init.el
dunst
dwm
emacs.d/init.el
herbstluftwm
i3
neovim
picom
polybar
qtile
qutebrowser-quickmarks
qutebrowser
spectrwm
st
stumpwm
surf
sxhkd
tabbed
termite
vifm
vim
vimb
xmobar
xmonad
xresources
zprofile
zsh
mutt
:r ï€‘Quit")

choice=$(echo -e "${options[@]}" |  repomenu -ps 1 -l 13 -w -400 -i -h -1 -y -1 -bw 4 -x 10000 )

cantfind() {
    notify=$(notify-send "Can't find config" "Config Folder can't be finded in: $1\nYou should edit the script!\nEdit config  folder of $2")
    exit 1
}

find() {
	if [ $(ls -a "$1" | grep -x "$2") ]; then
		if [ "$2" = "$3" ]; then
			choice="$1/$3"
		else
			choice="$1/$2/$3"
		fi
	else
		cantfind "$1" "$3"
	fi
}

case "$choice" in
	*Quit)
		echo "Program terminated." && exit 1
	;;
	*alacritty)
		choice="$XDG_CONFIG_HOME/alacritty/alacritty.yml"
	;;
	*awesome)
		choice="$XDG_CONFIG_HOME/awesome/rc.lua"
	;;
	*bash)
		configDir=$HOME
		configFile=.bashrc
		find "$configDir" "$configFile" "$configFile"
	;;
	*broot)
		config=broot
		configDir=$XDG_CONFIG_HOME
		configFile=conf.json
		find "$configDir" "$config" "$configFile"
	;;
	*bspwm)
		config=bspwm
		configDir=$XDG_CONFIG_HOME
		configFile=bspwmrc
		find "$configDir" "$config" "$configFile"
	;;
    	*doom.d/config.el)
		choice="$HOME/.doom.d/config.el"
	;;
    	*doom.d/init.el)
		choice="$HOME/.doom.d/init.el"
	;;
	*dunst)
		config=dunst
		configDir=$XDG_CONFIG_HOME
		configFile=dunstrc
		find "$configDir" "$config" "$configFile"
	;;
	*mutt)
		config=mutt
		configDir=$XDG_CONFIG_HOME
		configFile=muttrc
		find "$configDir" "$config" "$configFile"
	;;

	*dwm)
		choice="$HOME/dwm/config.def.h"
	;;
	*emacs.d/init.el)
		choice="$HOME/.emacs.d/init.el"
	;;
	*herbstluftwm)
		config=herbstluftwm
		configDir=$XDG_CONFIG_HOME
		configFile=autostart
		find "$configDir" "$config" "$configFile"
	;;
	*i3)
		config=i3
		configDir=$XDG_CONFIG_HOME
		configFile=config
		find "$configDir" "$config" "$configFile"
	;;
	*neovim)
		config=nvim
		configDir=$XDG_CONFIG_HOME
		configFile=init.vim
		find "$configDir" "$config" "$configFile"
	;;
	*picom)
		config=picom
		configDir=$XDG_CONFIG_HOME
		configFile=picom.conf
		find "$configDir" "$config" "$configFile"
	;;
	*polybar)
		config=polybar
		configDir=$XDG_CONFIG_HOME
		configFile=config
		find "$configDir" "$config" "$configFile"
	;;
	*qtile)
		config=qtile
		configDir=$XDG_CONFIG_HOME
		configFile=config.py
		find "$configDir" "$config" "$configFile"
	;;
	*quickmarks)
		config=qutebrowser
		configDir=$XDG_CONFIG_HOME
		configFile=quickmarks
		find "$configDir" "$config" "$configFile"
	;;
	*qutebrowser)
		config=qutebrowser
		configDir=$XDG_CONFIG_HOME
		configFile=config.py
		find "$configDir" "$config" "$configFile"
	;;
	*spectrwm)
		configDir=$HOME
		configFile=.spectrwm.conf
		find "$configDir" "$configFile" "$configFile"
	;;
	*st)
		choice="$HOME/st/config.h"
	;;
	*stumpwm)
		config=stumpwm
		configDir=$XDG_CONFIG_HOME
		configFile=config
		find "$configDir" "$config" "$configFile"
	;;
	*surf)
		choice="$HOME/surf/config.h"
	;;
	*sxhkd)
		config=sxhkd
		configDir=$XDG_CONFIG_HOME
		configFile=sxhkdrc
		find "$configDir" "$config" "$configFile"
	;;
	*tabbed)
		choice="$HOME/tabbed/config.h"
	;;
	*termite)
		config=termite
		configDir=$XDG_CONFIG_HOME
		configFile=config
		find "$configDir" "$config" "$configFile"
	;;
	*vifm)
		config=vifm
		configDir=$XDG_CONFIG_HOME
		configFile=vifmrc
		find "$configDir" "$config" "$configFile"
	;;
	*vim)
		configDir=$HOME
		configFile=.vimrc
		find "$configDir" "$configFile" "$configFile"
	;;
	*vimb)
		config=vimb
		configDir=$XDG_CONFIG_HOME
		configFile=config
		find "$configDir" "$config" "$configFile"
	;;
	*xmobar)
		config=xmobar
		configDir=$XDG_CONFIG_HOME
		configFile=xmobarrc2
		find "$configDir" "$config" "$configFile"
	;;
	*xmonad)
		config=.xmonad
		configDir=$HOME
		configFile=xmonad.hs
		find "$configDir" "$config" "$configFile"
	;;
	*xresources)
		configDir=$XDG_CONFIG_HOME
		configFile=Xresources
		find "$configDir" "$configFile" "$configFile"
	;;
	*zsh)
		choice="$ZDOTDIR/.zshrc"
	;;
	*zprofile)
		configDir=$HOME
		configFile=.zprofile
		find "$configDir" "$configFile" "$configFile"
	;;
	*)
		exit 1
	;;
esac

if [ $graphical = '0' ]; then
	$term -e $editor "$choice"
else
	$editor "$choice"
fi
